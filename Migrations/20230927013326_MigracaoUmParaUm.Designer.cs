// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RpgApi.Data;

#nullable disable

namespace RpgApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230927013326_MigracaoUmParaUm")]
    partial class MigracaoUmParaUm
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RpgApi.models.Armas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Dano")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonagemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonagemId")
                        .IsUnique();

                    b.ToTable("TB_ARMA");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Dano = 90,
                            Nome = "Exbalibur",
                            PersonagemId = 1
                        },
                        new
                        {
                            Id = 2,
                            Dano = 80,
                            Nome = "Cetro",
                            PersonagemId = 2
                        },
                        new
                        {
                            Id = 3,
                            Dano = 25,
                            Nome = "Cacetete",
                            PersonagemId = 3
                        },
                        new
                        {
                            Id = 4,
                            Dano = 50,
                            Nome = "Espada",
                            PersonagemId = 4
                        },
                        new
                        {
                            Id = 5,
                            Dano = 65,
                            Nome = "Foice",
                            PersonagemId = 5
                        },
                        new
                        {
                            Id = 6,
                            Dano = 40,
                            Nome = "Arco",
                            PersonagemId = 6
                        },
                        new
                        {
                            Id = 7,
                            Dano = 100,
                            Nome = "Chinelo de Mãe",
                            PersonagemId = 7
                        });
                });

            modelBuilder.Entity("RpgApi.models.Personagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Classe")
                        .HasColumnType("int");

                    b.Property<int>("Defesa")
                        .HasColumnType("int");

                    b.Property<int>("Forca")
                        .HasColumnType("int");

                    b.Property<byte[]>("FotoPersonagem")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Inteligencia")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PontosVida")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("TB_PERSONAGENS");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Classe = 1,
                            Defesa = 23,
                            Forca = 17,
                            Inteligencia = 33,
                            Nome = "Frodo",
                            PontosVida = 100
                        },
                        new
                        {
                            Id = 2,
                            Classe = 1,
                            Defesa = 25,
                            Forca = 15,
                            Inteligencia = 30,
                            Nome = "Sam",
                            PontosVida = 100
                        },
                        new
                        {
                            Id = 3,
                            Classe = 3,
                            Defesa = 21,
                            Forca = 18,
                            Inteligencia = 35,
                            Nome = "Galadriel",
                            PontosVida = 100
                        },
                        new
                        {
                            Id = 4,
                            Classe = 2,
                            Defesa = 18,
                            Forca = 18,
                            Inteligencia = 37,
                            Nome = "Gandalf",
                            PontosVida = 100
                        },
                        new
                        {
                            Id = 5,
                            Classe = 1,
                            Defesa = 17,
                            Forca = 20,
                            Inteligencia = 31,
                            Nome = "Hobbit",
                            PontosVida = 100
                        },
                        new
                        {
                            Id = 6,
                            Classe = 3,
                            Defesa = 13,
                            Forca = 21,
                            Inteligencia = 34,
                            Nome = "Celeborn",
                            PontosVida = 100
                        },
                        new
                        {
                            Id = 7,
                            Classe = 2,
                            Defesa = 11,
                            Forca = 25,
                            Inteligencia = 35,
                            Nome = "Radagast",
                            PontosVida = 100
                        });
                });

            modelBuilder.Entity("RpgApi.models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAcesso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Perfil")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Jogador");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TB_USUARIOS");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "seuEmail@gmail.com",
                            Latitude = -23.520024100000001,
                            Longitude = -46.596497999999997,
                            PasswordHash = new byte[] { 75, 6, 70, 38, 94, 54, 185, 20, 5, 27, 56, 17, 150, 115, 97, 24, 93, 156, 55, 147, 60, 169, 170, 183, 203, 73, 175, 92, 84, 27, 233, 38, 56, 253, 120, 111, 93, 234, 122, 236, 242, 132, 158, 190, 211, 41, 175, 131, 26, 157, 221, 192, 201, 116, 132, 234, 78, 105, 45, 61, 200, 132, 217, 17 },
                            PasswordSalt = new byte[] { 20, 59, 191, 100, 180, 9, 68, 215, 249, 211, 245, 254, 198, 98, 158, 197, 87, 146, 132, 215, 228, 229, 225, 112, 220, 217, 102, 85, 222, 174, 235, 132, 235, 133, 126, 87, 37, 42, 241, 44, 56, 133, 106, 254, 99, 34, 152, 249, 62, 151, 236, 31, 60, 200, 177, 203, 235, 60, 46, 182, 33, 26, 197, 42, 165, 50, 90, 91, 213, 113, 160, 103, 44, 84, 54, 70, 161, 113, 214, 255, 173, 82, 241, 19, 27, 17, 80, 156, 10, 54, 235, 215, 177, 16, 190, 115, 18, 142, 153, 203, 107, 245, 226, 26, 101, 88, 206, 32, 15, 6, 28, 203, 126, 110, 114, 126, 143, 192, 166, 37, 163, 160, 202, 223, 158, 30, 36, 155 },
                            Perfil = "Admin",
                            Username = "UsuarioAdmin"
                        });
                });

            modelBuilder.Entity("RpgApi.models.Armas", b =>
                {
                    b.HasOne("RpgApi.models.Personagem", "Personagem")
                        .WithOne("Armas")
                        .HasForeignKey("RpgApi.models.Armas", "PersonagemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personagem");
                });

            modelBuilder.Entity("RpgApi.models.Personagem", b =>
                {
                    b.HasOne("RpgApi.models.Usuario", "Usuario")
                        .WithMany("Personagens")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("RpgApi.models.Personagem", b =>
                {
                    b.Navigation("Armas")
                        .IsRequired();
                });

            modelBuilder.Entity("RpgApi.models.Usuario", b =>
                {
                    b.Navigation("Personagens");
                });
#pragma warning restore 612, 618
        }
    }
}
